{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/event.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/middleware/event.js","webpack://backend/./backend/src/config/middleware/adapter/event.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/event.js"],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,iBAAiB,mBAAO,CAAC,CAAe;AACxC,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,EAAW;AAClC,iBAAiB,mBAAO,CAAC,EAAa;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA,cAAc,mBAAO,CAAC,CAAoB;;AAE1C;AACA;AACA;;;;;;;ACJA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,gBAAgB,GAAG,qBAAqB;AAC1E;AACA;;AAEA;;AAEA;AACA;;;;;;;ACvBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;ACpBA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACFA;AACA;;;;;;;ACDA;AACA;AACA;;;;;;;ACFA,cAAc,mBAAO,CAAC,CAAuB;;AAE7C;AACA;AACA;;;;;;;ACJA,gBAAgB,mBAAO,CAAC,CAAoB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,qBAAqB,OAAO,GAAG,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC5CA;AACA;AACA;AACA;;;;;;;ACHA,cAAc,mBAAO,CAAC,EAAuB;;AAE7C;AACA;AACA,KAAK;AACL;AACA,mBAAmB,gBAAgB;AACnC,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;ACXA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  // meta\n  const meta = require('./meta.js')(app);\n  const routes = require('./routes.js')(app);\n\n  return {\n    routes,\n    services,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","const event = require('./service/event.js');\n\nmodule.exports = {\n  event,\n};\n","module.exports = app => {\n\n  class Event extends app.Service {\n\n    // register all events\n    async registerAllEvents() {\n      for (const module of this.app.meta.modulesArray) {\n        if (module.main.meta && module.main.meta.event && module.main.meta.event.implementations) {\n          this._registerEvents(module, module.main.meta.event.implementations);\n        }\n      }\n    }\n\n    async _registerEvents(module, implementations) {\n      const events = this.app.meta.geto('events');\n      for (const key in implementations) {\n        events.geta(key).push(`/${module.info.url}/${implementations[key]}`);\n      }\n    }\n\n  }\n\n  return Event;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    event: {\n      global: true,\n      dependencies: 'instance',\n    },\n  };\n\n  // startups\n  config.startups = {\n    installEvents: {\n      path: 'event/installEvents',\n    },\n  };\n\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","const event = require('./middleware/event.js');\n\nmodule.exports = {\n  event,\n};\n","const EventFn = require('./adapter/event.js');\nconst EVENT = Symbol('CTX#EVENT');\n\nmodule.exports = () => {\n  return async function event(ctx, next) {\n    ctx.meta = ctx.meta || {};\n    Object.defineProperty(ctx.meta, 'event', {\n      get() {\n        if (ctx.meta[EVENT] === undefined) {\n          ctx.meta[EVENT] = new (EventFn(ctx))();\n        }\n        return ctx.meta[EVENT];\n      },\n    });\n\n    // next\n    await next();\n  };\n};\n","const Fn = module.exports = ctx => {\n  // const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Event {\n\n    constructor(moduleName) {\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n    }\n\n    // other module's event\n    module(moduleName) {\n      return new (Fn(ctx))(moduleName);\n    }\n\n    // support: returnValue / event.break\n    async invoke({ module, name, data }) {\n      //\n      module = module || this.moduleName;\n      const key = `${module}:${name}`;\n      const events = ctx.app.meta.geto('events');\n      const eventArray = events[key];\n      if (!eventArray) return;\n      //\n      let returnValue;\n      for (const eventUrl of eventArray) {\n        const event = {\n          break: false,\n        };\n        const res = await ctx.performAction({\n          method: 'post',\n          url: eventUrl,\n          body: { event, data },\n        });\n        // check returnValue\n        if (res !== undefined) returnValue = res;\n        // check break\n        if (event.break) break;\n      }\n      // ok\n      return returnValue;\n    }\n\n  }\n\n  return Event;\n};\n","module.exports = app => {\n  const meta = {};\n  return meta;\n};\n","const event = require('./controller/event.js');\n\nmodule.exports = app => {\n  const routes = [\n    { method: 'post', path: 'event/installEvents', controller: event, middlewares: 'inner',\n      meta: {\n        instance: { enable: false },\n      },\n    },\n  ];\n  return routes;\n};\n","module.exports = app => {\n\n  class EventController extends app.Controller {\n\n    async installEvents() {\n      // register all events\n      await this.ctx.service.event.registerAllEvents();\n      this.ctx.success();\n    }\n\n  }\n\n  return EventController;\n};\n"],"sourceRoot":""}